---
import ProjectCard from './ProjectCard.astro';
import projects from '../data/projects.json';

// Calculate size class for each project
function calculateSize(maturity: number, impact: number, effort: number): string {
  const score = 0.5 * maturity + 0.3 * impact + 0.2 * effort;

  if (score >= 4.2) return 'xl';
  if (score >= 3.5) return 'l';
  if (score >= 2.6) return 'm';
  return 's';
}

const projectsWithSize = projects.map(project => ({
  ...project,
  sizeClass: calculateSize(project.maturity, project.impact, project.effort)
}));
---

<div id="bento-grid" class="grid grid-cols-12 gap-4 auto-rows-[200px]">
  {projectsWithSize.map((project) => (
    <ProjectCard
      slug={project.slug}
      title={project.title}
      status={project.status}
      kind={project.kind}
      hardware={project.hardware}
      oneLiner={project.oneLiner}
      sizeClass={project.sizeClass}
    />
  ))}
</div>

<script>
  // Filter logic
  window.addEventListener('filter-change', ((event: CustomEvent) => {
    const filter = event.detail.filter;
    const cards = document.querySelectorAll('.project-card');

    cards.forEach((card) => {
      const isHardware = card.getAttribute('data-hardware') === 'true';

      if (filter === 'all') {
        card.classList.remove('hidden');
      } else if (filter === 'hardware') {
        if (isHardware) {
          card.classList.remove('hidden');
        } else {
          card.classList.add('hidden');
        }
      }
    });
  }) as EventListener);
</script>
